{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeDropdown","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataValues","dataPoints","dataValue","totalMaximum","max","dataPoint","ExpensesChart","chartDataPoints","expenses","forEach","expenseMonth","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isAdding","setIsAdding","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","previousExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d16e40d.chunk.js","sourcesContent":["import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date_year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import './Card.css';\n\nfunction Card(props) {\n  const classes = `card ${props.className}`;\n  // console.log(classes)\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","// import React, { useState } from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>â‚¬{props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import './ExpensesList.css';\n\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = (props) => {\n\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\n  }\n\n  return <ul className=\"expenses-list\">\n     {props.items.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ))}\n  </ul>;\n};\n\nexport default ExpensesList;\n","// import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeDropdown(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div className='chart-bar__fill' style={{height: barFillHeight}}></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const dataValues = props.dataPoints.map((dataValue) => dataValue.value);\n  const totalMaximum = Math.max(...dataValues);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\n\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  props.expenses.forEach((expense) => {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 -> January = 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  });\n\n  return <Chart dataPoints={chartDataPoints}/>;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from 'react';\n\nimport ExpensesList from './ExpensesList'\nimport ExpensesFilter from './ExpensesFilter';\nimport Card from '../UI/Card';\nimport ExpensesChart from './ExpensesChart';\n\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeDropdown={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses}/>\n        <ExpensesList items={filteredExpenses}/>\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n\n// Inside Return before:\n/* <ExpenseItem\n  title={props.items[0].title}\n  amount={props.items[0].amount}\n  date={props.items[0].date}\n/>\n<ExpenseItem\n  title={props.items[1].title}\n  amount={props.items[1].amount}\n  date={props.items[1].date}\n/>\n<ExpenseItem\n  title={props.items[2].title}\n  amount={props.items[2].amount}\n  date={props.items[2].date}\n/>\n<ExpenseItem\n  title={props.items[3].title}\n  amount={props.items[3].amount}\n  date={props.items[3].date}\n/> */\n\n/* {filteredExpenses.length === 0 && <p>No Expenses found</p>}\n{filteredExpenses.length > 0 &&\n  filteredExpenses.map((expense) => (\n    <ExpenseItem\n      key={expense.id}\n      title={expense.title}\n      amount={expense.amount}\n      date={expense.date}\n    />\n  ))} */\n","import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  // Multi-state Approach:\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  // Alternative Approach:\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input\n            type='text'\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='button' onClick={props.onCancel}>Cancel</button>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const [isAdding, setIsAdding] = useState(false);\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsAdding(false);\n  };\n\n  const startAddingHandler = () => {\n    setIsAdding(true);\n  };\n\n  const stopAddingHandler = () => {\n    setIsAdding(false);\n  }\n\n  return (\n    <div className='new-expense'>\n      {!isAdding && (\n        <button onClick={startAddingHandler}>Add New Expense</button>\n      )}\n      {isAdding && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopAddingHandler} />}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","// import React from 'react'; - was needed in older react versions when writing return code like below\nimport React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n// function App() { ... } - optional if using Arrow Function\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(previousExpenses => {\n      return [expense, ...expenses];\n    });\n  };\n\n  // Old Way in React (where import React from 'react' was needed)\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <h1>Expense Tracker</h1>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}